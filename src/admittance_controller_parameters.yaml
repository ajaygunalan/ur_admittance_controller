ur_admittance_controller:
  joints:
    type: string_array
    description: "Joint names to be controlled by the admittance controller"
    read_only: true

  command_interfaces:
    type: string_array
    description: "Command interfaces provided by the hardware"
    read_only: true

  state_interfaces:
    type: string_array
    description: "State interfaces provided by the hardware"
    read_only: true

  chainable_command_interfaces:
    type: string_array
    description: "Command interfaces that can be chained to other controllers"
    default_value: ["position", "velocity"]
    read_only: true

  kinematics_plugin_name:
    type: string
    description: "Name of the kinematics plugin to use"
    default_value: "kinematics_interface_kdl/KinematicsInterfaceKDL"

  kinematics_plugin_package:
    type: string
    description: "Package containing the kinematics plugin"
    default_value: "kinematics_interface_kdl"

  base_link:
    type: string
    description: "Name of the base link in the robot model"
    default_value: "base_link"

  tip_link:
    type: string
    description: "Name of the end effector link"
    default_value: "tool0"

  jacobian_damping:
    type: double
    description: "Damping value for the Jacobian pseudo-inverse calculation"
    default_value: 0.01
    validation:
      bounds<>: [0.0001, 1.0]

  ft_sensor_name:
    type: string
    description: "Name of the force/torque sensor in the robot description"
    default_value: "wrist_ft_sensor"

  ft_frame:
    type: string
    description: "Name of the force/torque sensor frame"
    default_value: "wrist_3_link"

  filter_coefficient:
    type: double
    description: "Coefficient for the exponential filter applied to the force/torque measurements"
    default_value: 0.05
    validation:
      bounds<>: [0.0, 1.0]

  control_frame:
    type: string
    description: "Name of the frame used for admittance control calculations"
    default_value: "tool0"

  world_frame:
    type: string
    description: "Name of the world frame (gravity points down in this frame)"
    default_value: "world"

  gravity_compensation_frame:
    type: string
    description: "Frame in which the center of gravity is defined"
    default_value: "wrist_3_link"

  center_of_gravity:
    type: double_array
    description: "Position of the center of gravity in the gravity compensation frame [x, y, z]"
    default_value: [0.0, 0.0, 0.0]
    # Size validation removed - default value already has correct size

  weight:
    type: double
    description: "Weight of the end effector for gravity compensation (mass * gravity)"
    default_value: 0.0
    validation:
      bounds<>: [0.0, 100.0]

  admittance_enabled_axes:
    type: bool_array
    description: "Which axes are enabled for admittance control [x, y, z, rx, ry, rz]"
    default_value: [true, true, true, true, true, true]
    # Size validation removed - default value already has correct size

  mass:
    type: double_array
    description: "Mass values for each axis [x, y, z, rx, ry, rz]"
    default_value: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0]
    validation:
      bounds<>: [0.0001, 1000.0]

  damping_ratio:
    type: double_array
    description: "Damping ratio for each axis [x, y, z, rx, ry, rz]"
    default_value: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    validation:
      bounds<>: [0.0, 10.0]

  stiffness:
    type: double_array
    description: "Stiffness values for each axis [x, y, z, rx, ry, rz]"
    default_value: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
    validation:
      bounds<>: [0.0, 1000.0]

  joint_damping:
    type: double
    description: "Damping applied to joint motions in admittance calculation"
    default_value: 5.0
    validation:
      bounds<>: [0.0, 100.0]

  velocity_scale_factor:
    type: double
    description: "Scale factor applied to velocities for simulation stability"
    default_value: 0.6
    validation:
      bounds<>: [0.01, 1.0]

  min_motion_threshold:
    type: double
    description: "Minimum motion threshold to prevent tiny movements"
    default_value: 0.01
    validation:
      bounds<>: [0.0, 0.1]

  trajectory_duration:
    type: double
    description: "Duration of generated trajectories in seconds"
    default_value: 3.0
    validation:
      bounds<>: [0.1, 10.0]

  position_tolerance:
    type: double
    description: "Position tolerance for trajectory execution (radians)"
    default_value: 0.3
    validation:
      bounds<>: [0.01, 1.0]

  velocity_tolerance:
    type: double
    description: "Velocity tolerance for trajectory execution (rad/s)"
    default_value: 1.5
    validation:
      bounds<>: [0.01, 10.0]

  goal_time_tolerance:
    type: double
    description: "Goal time tolerance for trajectory execution (seconds)"
    default_value: 1.5
    validation:
      bounds<>: [0.01, 10.0]

  retry_on_abort:
    type: bool
    description: "Whether to retry trajectories on abort"
    default_value: true

  max_retries:
    type: int
    description: "Maximum number of trajectory retries"
    default_value: 3
    validation:
      bounds<>: [0, 10]

  retry_delay:
    type: double
    description: "Delay between trajectory retries (seconds)"
    default_value: 1.0
    validation:
      bounds<>: [0.1, 10.0]

  dynamic_parameters:
    type: bool
    description: "Whether parameters can be dynamically updated"
    default_value: true
